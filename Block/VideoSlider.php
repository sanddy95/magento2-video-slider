<?php
/**
 * PHP version 7.1
 *
 * @category  Techeniac
 * @package   Techeniac\VideoSlider\Block
 * @author    Techeniac <buzz@techeniac.com>
 * @copyright 2019 This file was generated by Techeniac
 * @license   http://www.techeniac.com Open Software License (OSL 3.0)
 * @link      http://www.techeniac.com
 */

namespace Techeniac\VideoSlider\Block;

use Magento\Framework\View\Element\Template\Context;
use Magento\Widget\Block\BlockInterface;
use Magento\Framework\View\Element\Template;

/**
 * PHP version 7.1
 *
 * @category  Techeniac
 * @package   Techeniac\VideoSlider\Block
 * @author    Techeniac <buzz@techeniac.com>
 * @copyright 2019 This file was generated by Techeniac
 * @license   http://www.techeniac.com Open Software License (OSL 3.0)
 * @link      http://www.techeniac.com
 */

class VideoSlider extends Template implements BlockInterface
{

    /**
     * Store Manager
     *
     * @var \Magento\Store\Model\StoreManagerInterface
     */
    protected $storeManager;

    /**
     * Template selection
     *
     * @var string
     */
    protected $template = "SliderTemplate.phtml";

    /**
     * Protected redirect variable
     *
     * @var \Magento\Framework\App\Response\RedirectInterface
     */
    protected $redirect;

    /**
     * Protected request variable
     *
     * @var \Magento\Framework\App\RequestInterface
     */
    protected $request;

    /**
     * SliderFactory
     *
     * @var sliderfactory
     */
    protected $sliderFactory;

    /**
     * Helper Variable
     *
     * @var \Techeniac\VideoSlider\Helper\Data
     */
    protected $helper;

    /**
     * Initialize
     *
     * @param \Magento\Backend\Block\Widget\Context             $context       context
     * @param \Techeniac\VideoSlider\Model\SliderFactory        $sliderFactory sliderFactory
     * @param \Magento\Store\Model\StoreManagerInterface        $storeManager  storeManager
     * @param \Magento\Framework\App\Response\RedirectInterface $redirect      redirect
     * @param \Magento\Framework\App\RequestInterface           $request       request
     * @param \Techeniac\VideoSlider\Helper\Data                $helper        helper
     * @param array                                             $data          data
     */
    public function __construct(
        Context $context,
        \Techeniac\VideoSlider\Model\SliderFactory $sliderFactory,
        \Magento\Store\Model\StoreManagerInterface $storeManager,
        \Magento\Framework\App\Response\RedirectInterface $redirect,
        \Magento\Framework\App\RequestInterface $request,
        \Techeniac\VideoSlider\Helper\Data $helper,
        array $data = []
    ) {
        $this->sliderFactory = $sliderFactory;
        $this->storeManager = $storeManager;
        $this->redirect = $redirect;
        $this->request = $request;
        $this->helper = $helper;
        parent::__construct($context, $data);
    }

    /**
     * Return collection list
     *
     * @return Collection
     */
    public function getSliderCollection()
    {
        return $this->sliderFactory->create()->getCollection()
            ->addFieldToFilter('is_active', 1)
            ->setOrder('position', 'ASC')
            ->setOrder('updated_at', 'DESC');
    }

    /**
     * Return Video Mute Value
     *
     * @return integer
     */
    public function getVideoMuteValue()
    {
        return $this->helper->getMuteValue();
    }

    /**
     * Return youtube video content
     *
     * @param videoid $videoid videoid
     * @param title   $title   title
     * @param content $content content
     *
     * @return string
     */
    public function getYoutubeVideo($videoid, $title, $content)
    {

        return "<div class='item youtube'>
                    <iframe class='embed-player slide-media' width='980' height='520'
                            src='https://www.youtube.com/embed/".$videoid."?enablejsapi=1&controls=0&fs=0&iv_load_policy=3&rel=0&showinfo=0&loop=1&playlist=".$videoid."&start=1'
                            frameborder='0' allowfullscreen></iframe>
                    <div class='slider-content'>
                        <p class='caption title'>$title</p>
                        <p class='description'>$content</p>
                    </div>
                </div>";
    }

    /**
     * Return custom video content
     *
     * @param videoid $videoid videoid
     * @param title   $title   title
     * @param content $content content
     *
     * @return string
     */
    public function getVideoUrl($videoid, $title, $content)
    {

        $mediaurl = $this->getMediaUrl().$videoid;
        if($this->getVideoMuteValue()){
            return "<div class='item video'>
                    <video class='slide-video slide-media' loop muted preload='metadata'>
                        <source src='$mediaurl' type='video/mp4' />
                    </video>
                    <div class='slider-content'>
                        <p class='caption title'>$title</p>
                        <p class='description'>$content</p>
                    </div>
                </div>";
        }else{
            return "<div class='item video'>
                    <video class='slide-video slide-media' loop preload='metadata'>
                        <source src='$mediaurl' type='video/mp4' />
                    </video>
                    <div class='slider-content'>
                        <p class='caption title'>$title</p>
                        <p class='description'>$content</p>
                    </div>
                </div>";
        }
    }

    /**
     * Get Media URl
     *
     * @return Mediaurl
     */
    public function getMediaUrl()
    {
        return $this->storeManager
            ->getStore()
            ->getBaseUrl(\Magento\Framework\UrlInterface::URL_TYPE_MEDIA).'videoslider/';
    }
}
