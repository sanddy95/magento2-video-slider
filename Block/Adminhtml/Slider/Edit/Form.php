<?php

/**
 * PHP version 7.1
 *
 * @category  Techeniac
 * @package   Techeniac\VideoSlider\Block\Adminhtml\Slider\Edit
 * @author    Techeniac <buzz@techeniac.com>
 * @copyright 2019 This file was generated by Techeniac
 * @license   http://www.techeniac.com Open Software License (OSL 3.0)
 * @link      http://www.techeniac.com
 */

namespace Techeniac\VideoSlider\Block\Adminhtml\Slider\Edit;

/**
 * Etatvasoft videogallery detail edit form
 * PHP version 7.1
 *
 * @category  Techeniac
 * @package   Techeniac\VideoSlider\Block\Adminhtml\Slider\Edit
 * @author    Techeniac <buzz@techeniac.com>
 * @copyright 2019 This file was generated by Techeniac
 * @license   http://www.techeniac.com Open Software License (OSL 3.0)
 * @link      http://www.techeniac.com
 */
class Form extends \Magento\Backend\Block\Widget\Form\Generic
{
    /**
     * Variable Initiallize
     *
     * @param \Magento\Backend\Block\Template\Context $context     Initiallize Context
     * @param \Magento\Framework\Registry             $registry    Initiallize registery
     * @param \Magento\Framework\Data\FormFactory     $formFactory Initiallize formfactory
     * @param \Magento\Store\Model\System\Store       $systemStore Initiallize systemstore
     * @param array                                   $data        data array
     */
    public function __construct(
        \Magento\Backend\Block\Template\Context $context,
        \Magento\Framework\Registry $registry,
        \Magento\Framework\Data\FormFactory $formFactory,
        \Magento\Store\Model\System\Store $systemStore,
        array $data = []
    ) {
        $this->_systemStore = $systemStore;
        parent::__construct($context, $registry, $formFactory, $data);
    }

    /**
     * Init form
     *
     * @return void
     */
    protected function _construct()
    {
        parent::_construct();
        $this->setId('slider_form');
        $this->setTitle(__('Slider Information'));
    }

    /**
     * Prepare form
     *
     * @return $this
     */
    protected function _prepareForm()
    {
        /**
         * Core registery
         *
         * @var \Etatvasoft\Videogallery\Model\video $model
         */
        $model = $this->_coreRegistry->registry('videoslider_slider');

        /**
         * Send form tag
         *
         * @var \Magento\Framework\Data\Form $form
         */
        $form = $this->_formFactory->create(
            ['data' => ['id' => 'edit_form', 'action' => $this->getData('action'), 'method' => 'post', 'enctype' => 'multipart/form-data']]
        );

        $fieldset = $form->addFieldset(
            'base_fieldset',
            ['legend' => __('General Information'), 'class' => 'fieldset-wide']
        );

        if ($model->getId()) {
            $fieldset->addField('id', 'hidden', ['name' => 'id']);
        }

        $fieldset->addField(
            'title',
            'text',
            [
                'name' => 'title',
                'label' => __('Video Title'),
                'title' => __('Video Title'),
                'required' => false
            ]
        );

        $action = $fieldset->addField(
            "Video Upload",
            "select",
            [
                "label"     =>      __("Video Upload Method"),
                "class"     =>      "required-entry",
                "name"      =>      "Video_Upload_Method",
                "options"   => ['' => __('Please Select'), 'youtube' => __('YouTube'), 'from_pc' => __('From PC')],
                "required"  =>true
            ]
        );

        if ($model->getVideoUploadMethod()) {
            $model->setData('Video Upload', $model->getVideoUploadMethod() == 'youtube' ? 'youtube' : 'from_pc');
        }

        if ($model->getVideoUploadMethod() && $model->getVideoUploadMethod() == 'youtube') {
            $model->setData('youtube', $model->getFile());
        }

        if ($model->getVideoUploadMethod() && $model->getVideoUploadMethod() == 'from_pc') {
            $model->setData('old_video', $model->getFile());
            $model->setData('From_PC', $model->getFile());

            $field1 = $fieldset->addField(
                "uploaded_video",
                "text",
                [
                    "label"     => __("Uploaded File"),
                    "name"      => "uploaded_video",
                    "readonly"  => true,
                    "disabled"  => true
                ]
            );
            $model->setData('uploaded_video', $model->getFile());
        }

        $field1 = $fieldset->addField(
            "youtube",
            "text",
            [
                "label"     => __("Youtube Code"),
                "class"     => "required-entry",
                "required"  => true,
                "name"      => "youtube",
                "note"      => __("Please add code 'XXXXXXXXXXX' from https://www.youtube.com/watch?v=XXXXXXXXXXX")
            ]
        );

        if ($model->getVideoUploadMethod() && $model->getVideoUploadMethod() == 'from_pc') {
            $field2 = $fieldset->addField(
                "From_PC",
                "file",
                [
                    "label"     => __("From PC"),
                    "name"      => "From_PC",
                    "note"      => __("Allowed video type: mp4, Max file size allowed: ".ini_get('upload_max_filesize'))
                ]
            );

            $fieldset->addField(
                "old_video",
                "hidden",
                [
                    "label"     => __("Old Video"),
                    "class"     => "required-entry",
                    "required"  => true,
                    "name"      => "old_video"
                ]
            );
        } else {
            $field2 = $fieldset->addField(
                "From_PC",
                "file",
                [
                    "label"     => __("From PC"),
                    "class"     => "required-entry",
                    "required"  => true,
                    "name"      => "From_PC",
                    "note"      => "Allowed video type: mp4, Max file size allowed: ".ini_get('upload_max_filesize')
                ]
            );
        }

        $this->setChild(
            'form_after',
            $this->getLayout()->createBlock('\Magento\Backend\Block\Widget\Form\Element\Dependence')
                ->addFieldMap($action->getHtmlId(), $action->getName())
                ->addFieldMap($field1->getHtmlId(), $field1->getName())
                ->addFieldDependence($field1->getName(), $action->getName(), 'youtube')
                ->addFieldMap($field2->getHtmlId(), $field2->getName())
                ->addFieldDependence($field2->getName(), $action->getName(), 'from_pc')
        );

        $fieldset->addField(
            'content_on_slider',
            'editor',
            [
                'name' => 'content_on_slider',
                'label' => __('Slider Content'),
                'title' => __('Slider Content'),
                'style' => 'height:10em',
                'required' => false
            ]
        );

        $fieldset->addField(
            'position',
            'text',
            [
                'name' => 'position',
                'label' => __('Position'),
                'title' => __('Position'),
                'class'     => 'required-entry validate-number',
                'required' => true
            ]
        );

        $fieldset->addField(
            'is_active',
            'select',
            [
                'label' => __('Status'),
                'title' => __('Status'),
                'name' => 'is_active',
                'required' => true,
                'options' => ['1' => __('Enabled'), '0' => __('Disabled')]
            ]
        );
        if (!$model->getId()) {
            $model->setData('is_active', '1');
        }

        $form->setValues($model->getData());
        $form->setUseContainer(true);
        $this->setForm($form);

        return parent::_prepareForm();
    }
}
